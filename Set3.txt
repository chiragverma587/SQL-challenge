101. select distinct username, activity, startDate, endDate
from
    (select u.*,
           rank() over (partition by username order by startDate desc) as rnk,
           count(activity) over (partition by username) as num
    from UserActivity u) t
where (num <> 1 and rnk = 2) or (num = 1 and rnk = 1)

102. select distinct username, activity, startDate, endDate
from
    (select u.*,
           rank() over (partition by username order by startDate desc) as rnk,
           count(activity) over (partition by username) as num
    from UserActivity u) t
where (num <> 1 and rnk = 2) or (num = 1 and rnk = 1)

103. select name from students where marks > 75 order by right(name,3) asc, id asc;

104. SELECT name FROM Employee ORDER BY name;

106. select case
            when a+b>c and a=b and b=c and a=c then 'Equilateral'
            when a+b>c and (a=b or b=c or a=c) then 'Isosceles'
            when a+b>c and a<>b and b<>c and a<>c then 'Scalene'
            else 'Not A Triangle'
        end
        from triangles;

107. select ceil(avg(salary) - avg(replace(salary, '0', ''))) from employees;

108. select salary*months, count(employee_id) from employee group by salary*months order by salary*months desc limit 1;

109. select concat(name,'(',upper(substring(occupation,1,1)),')') from occupations
order by name;

select concat("There are a total of",' ',count(occupation),' ',lower(occupation),'s',".")  from occupations
group by occupation
order by count(occupation) asc;

110. SELECT Doctor, Professor, Singer, Actor FROM (
SELECT ROW_NUMBER() OVER (PARTITION BY occupation ORDER BY name) as rn, name, occupation FROM       occupations) 
PIVOT 
(MAX(name) FOR occupation IN ('Doctor' as Doctor,'Professor' as Professor, 'Singer' as Singer, 'Actor' as Actor)) 
ORDER BY rn;